# Generated by Django 5.1.4 on 2024-12-14 08:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('year_level', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Lost', 'Lost'), ('Found', 'Found')], max_length=100)),
                ('image', models.ImageField(upload_to='item_images/')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('Personal Items', 'Personal'), ('School Items', 'School'), ('Electronics', 'Electronics'), ('Books and Educational Items', 'Educational'), ('Sports Items', 'Sports'), ('Food and Drink Containers', 'Foodanddrink'), ('Miscellaneous', 'Miscellaneous'), ('Identification and Documents', 'Identification')], max_length=100)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('location', models.CharField(choices=[('Gusaling Aquino', 'Gusaling Aquino'), ('Gusaling Atienza', 'Gusaling Atienza'), ('Gusaling Bagatsing', 'Gusaling Bagatsing'), ('Gusaling Ejercito', 'Gusaling Ejercito'), ('Gusaling Katipunan', 'Gusaling Katipunan'), ('Gusaling Lacson', 'Gusaling Lacson'), ('Gusaling Villegas', 'Gusaling Villegas'), ('Entrepreneurial Building', 'Entrepreneurial Building'), ('Executive Building', 'Executive Building'), ('Flame Torch', 'Flame Torch'), ('Justo Albert Auditorium', 'Justo Albert Auditorium'), ('Mini Garden', 'Mini Garden'), ('Parking Space', 'Parking Space'), ('PLM Catwalk', 'Plm Catwalk'), ('PLM Chapel', 'Plm Chapel'), ('PLM Field', 'Plm Field'), ('Pride Hall', 'Pride Hall'), ('Rajah Sulayman Gym', 'Rajah Sulayman Gym'), ('Study Gazebo', 'Study Gazebo'), ('Tanghalang Bayan', 'Tanghalang Bayan'), ('University Activity Center', 'University Activity Center'), ('University Canteen', 'University Canteen'), ('University Library', 'University Library')], max_length=100)),
                ('returned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('returned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='returned_items', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reported_items', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='harifind_app.item')),
            ],
        ),
    ]
